{"version":3,"sources":["webpack:///./resources/js/plugins/mobileNavigation.plugin.js"],"names":["__webpack_require__","r","__webpack_exports__","jquery__WEBPACK_IMPORTED_MODULE_0__","jquery__WEBPACK_IMPORTED_MODULE_0___default","n","$","fn","mobileNavigation","options","plugin","this","settings","extend","toggleClass","wrapperClass","subMenuClass","directionFrom","overlayCss","display","background","bottom","height","left","opacity","position","right","top","width","closeAll","toggleAll","toSelector","className","toggleMenu","hasClass","addClass","toggleSelector","find","toggle","toggleFreezeFrame","parentNode","each","call","initSubMenu","text","length","append","first","prepend","$pluginParent","on","data","index","siblings","attr","end","cloneAndAppendMenu","clone","pluginParent","remove","closest","scroll","overflow","css","init","classRegExp","overlay","RegExp","key","value","error","test"],"mappings":"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","file":"/js/plugins/mobileNavigation.plugin.js","sourcesContent":["/**\n *\n * jQuery Mobile Navigation Plugin\n */\n\n'use strict';\n\nimport $ from 'jquery';\n\n$.fn.mobileNavigation = function(options) {\n    var plugin = this;\n\n    var defaults = {\n        toggleClass: 'menu-toggle',\n        wrapperClass: 'shell',\n        subMenuClass: 'dropdown',\n        directionFrom: 'left',\n        overlayCss: {\n            display: 'none',\n            background: '#000000',\n            bottom: '0%',\n            height: '100%',\n            left: '0%',\n            opacity: '.4',\n            position: 'fixed',\n            right: '0%',\n            top: '0%',\n            width: '100%'\n        }\n    };\n\n\n    this.settings = $.extend({}, defaults, options);\n\n    this.closeAll = function() {\n        toggleAll();\n    };\n\n    /**\n     *\n     * Return CSS selector from class name.\n     */\n\n    var toSelector = function(className) {\n        return '.' + className;\n    };\n\n    /**\n     *\n     * Validate optionals params when initializing library.\n     */\n\n    var validateOptions = function() {\n\n        var classRegExp = new RegExp(/^\\./);\n\n        $.each(plugin.settings, function(key, value) {\n\n            if(key === 'directionFrom') {\n\n                if(value !== 'left' && value !== 'right') {\n                    $.error('Wrong direction. Choose  \"left\" or \"right\".');\n                }\n\n                return true;\n            }\n\n            if(classRegExp.test(value)) {\n                $.error('The value ' + value + ' for ' + key + ' just needs the class name not css selector.');\n            }\n\n        });\n    };\n\n    /**\n     *\n     * Toggles Individual Menu\n     * .init sets the menu opacity to 1 to prevent FOUC.\n     */\n\n    var toggleMenu = function() {\n        if(!$(this).hasClass('init')) {\n            $(this).addClass('init');\n        }\n\n        $(this).toggleClass('open');\n    };\n\n    /**\n     *\n     *  Toggles All Menus\n     */\n\n    var toggleAll = function() {\n        var toggleSelector = toSelector(plugin.settings.toggleClass);\n        var subMenuClass   = toSelector(plugin.settings.subMenuClass);\n        var $overlay       = $(toSelector(plugin.settings.wrapperClass)).find('.mobile-overlay');\n\n        $overlay.toggle();\n\n        toggleFreezeFrame();\n\n        $(toggleSelector).find('i').toggleClass('fa-bars fa-times');\n\n        $(plugin[0].parentNode)\n            .find(subMenuClass)\n            .each(function() {\n                if($(this).hasClass('open')) {\n                    toggleMenu.call(this);\n                }\n            });\n\n        toggleMenu.call(plugin[0]);\n    };\n\n    /**\n     *\n     * Sets the direction from where the menu animates from.\n     */\n\n    var setMenuDirection = function() {\n        var subMenuClass = toSelector(plugin.settings.subMenuClass);\n\n        $(this)\n            .addClass(plugin.settings.directionFrom)\n            .find(subMenuClass)\n            .addClass(plugin.settings.directionFrom);\n    };\n\n    /**\n     *\n     * Toggles the main menu. Closes other sub menus if they're open.\n     */\n\n    var bindToggle = function() {\n        var $toggle = $(toSelector(plugin.settings.toggleClass));\n\n        $toggle.on('click', toggleAll);\n    };\n\n    /**\n     *\n     * Bind sub menu button to toggle child menu.\n     */\n\n    var bindSubMenuToggle = function() {\n        var subMenuClass  = toSelector(plugin.settings.subMenuClass);\n        var $pluginParent = $(plugin[0].parentNode);\n\n        $(this)\n            .find('.sub-menu-toggle')\n            .on('click', $pluginParent, function() {\n                var text = $(this).data('menu');\n                toggleMenu.call($(subMenuClass + '[data-menu=\"' + text + '\"]'));\n            });\n\n    };\n\n    /**\n     *\n     * Append buttons to list items with subMenu menus. Add back buttons to menus.\n     */\n\n    var appendControl = function() {\n        var subMenuClass = toSelector(plugin.settings.subMenuClass);\n        var text         = $(this).find('> a').text();\n\n        if($(this).find(subMenuClass).length == 0) {\n            return true;\n        }\n\n        $(this)\n            .append('<button class=\"sub-menu-toggle\" data-menu=\"' + text + '\"><i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i></button>');\n\n        $(this)\n            .find(subMenuClass + ' ul').first()\n            .prepend('<li><button class=\"sub-menu-toggle\" data-menu=\"' + text + '\"><i class=\"fa fa-angle-left\" aria-hidden=\"true\"></i> ' + text + '</button></li>')\n\n    };\n\n    /**\n     *\n     * Find all sub menus and append as a sibling of library's initialized class.\n     */\n\n    var cloneAndAppendMenu = function() {\n        var subMenuClass = toSelector(plugin.settings.subMenuClass);\n        var clone        = $(this).clone(true, true);\n        var pluginParent = plugin[0].parentNode;\n\n        // Remove sub menus from mark up\n        $(clone).find(subMenuClass).remove();\n\n        // Checks for sub menu of another sub menu and call function recursively\n        if($(this).find(subMenuClass).length > 0) {\n            cloneAndAppendMenu.call($(this).find(subMenuClass));\n        }\n\n        // Remove after cloning and appending\n        $(this)\n            .closest(pluginParent)\n            .append(clone)\n            .end()\n            .remove();\n    };\n\n    /**\n     *\n     *  Set unique identifier on each menu.\n     */\n\n    var setMenuId = function() {\n        var subMenuClass = toSelector(plugin.settings.subMenuClass);\n        var text         = $(this).siblings('a').text();\n\n        $(this)\n            .find(subMenuClass)\n            .each(function() {\n                var text = $(this).siblings('a').text();\n                $(this).attr('data-menu', text).addClass('sub-menu');\n            })\n            .end()\n            .attr('data-menu', text);\n    };\n\n    /**\n     *\n     * Set up sub menu\n     */\n\n    var initSubMenu = function() {\n        var subMenuClass = toSelector(plugin.settings.subMenuClass);\n        var $menuItems   = $(this).find('nav ul li');\n\n        // For each menu item\n        $menuItems\n            .each(function() {\n                appendControl.call(this);\n                bindSubMenuToggle.call(this);\n            });\n\n        // For each menu\n        $(this)\n            .find(subMenuClass)\n            .each(function(index) {\n                setMenuId.call(this, index);\n                cloneAndAppendMenu.call(this);\n            });\n\n    };\n\n    /**\n     *\n     * Insert overlay and bind it to close all menus on click\n     */\n\n    var addOverlay = function() {\n        var overlay = '<div class=\"mobile-overlay\"></div>';\n        overlay     = $(overlay).css(plugin.settings.overlayCss);\n\n        $(toSelector(plugin.settings.wrapperClass)).append($(overlay));\n\n        $(overlay).on('click', function() {\n            toggleAll();\n        });\n\n    };\n\n    /*\n     *\n     * Freeze frame toggle\n     */\n\n    var toggleFreezeFrame = function() {\n        var scroll = {\n            'height': '100%',\n            'overflow': 'hidden'\n        };\n\n        if($(plugin[0]).hasClass('open')) {\n            scroll.overflow = 'auto';\n        }\n\n        $('html').css(scroll);\n\n    };\n\n    /**\n     *\n     * Set up main menu\n     */\n    var init = function() {\n        validateOptions();\n        addOverlay();\n        setMenuDirection.call(this);\n        bindToggle.call(this);\n    };\n\n    /**\n     *\n     * Do this each time the library is initialized\n     */\n\n    return this.each(function() {\n        init.call(this);\n        initSubMenu.call(this);\n    });\n};\n"],"sourceRoot":""}