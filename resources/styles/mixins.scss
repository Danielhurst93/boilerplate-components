@use "variables";

///
/// color-modifiers mixin
///

@mixin -color-modifiers($modifiers: variables.$color-modifiers) {
    @each $colors in $modifiers {
        $label: nth($colors, 1);
        $color: map-get(variables.$color-modifiers, $label);

        @if length($colors) > 1 {
            $color: nth($colors, 2);
        }

        &.-#{$label} {
            @content($color);
        }
    }
}

///
/// grouping mixin
///

@mixin grouping {
    &::before,
    &::after {
        content: "";
        display: table;
    }
    &::after {
        clear: both;
    }
}


///
/// fontawesome mixin
///

@mixin fontawesome($weight: 400, $character: "") {
    font: normal normal normal 1em unquote("/") 1 "Font Awesome 5 Free";
    content: $character;
    display: inline-block;
    font-size: inherit;
    font-weight: $weight;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    speak: none;
    text-rendering: auto;
    text-transform: none;
}


///
/// no-bullets mixin
///

@mixin no-bullets {
    list-style: none;
    margin: 0;
    padding-left: 0;

    li::before {
        display: none;
    }
}


///
/// transition mixin
///

@mixin transition($properties: all, $duration: 250ms, $easing: ease-in-out) {
    transition: $properties $duration $easing;
}


///
/// media query mixin
///

@mixin breakpoint($bp, $rule: min-width) {
    @media screen and (#{$rule}: map-get(variables.$breakpoints, $bp)) {
        @content;
    }
}
